service: cep-a72-casestudy

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  profile: cep
  environment:
    ENV: dev
  stackTags:
    Group: CEP4-A72
    Name Initials: RG
    Purpose: "Case study"
  tags:
    Group: CEP4-A72
    Name Initials: RG
    Purpose: "Case study"
  deploymentBucket:
    tags:
      Group: CEP4-A72
      Name Initials: RG
      Purpose: "Case study"
  #vpc: ${file(vpc_setting.yml):${self:provider.stage}}

custom:
  config : ${file(./serverless.config.yml)}

# functions:
#   - ${file(serverless.functions.yml)}

resources:
  Resources:
    CognitoUserPoolUserPool:
      Type: "AWS::Cognito::UserPool"
      Properties:
        UserPoolName: rg-${self:provider.stage}-${self:service}
        VerificationMessageTemplate:
          DefaultEmailOption: CONFIRM_WITH_LINK
        EmailVerificationSubject: 'Your Verification Link'
        EmailVerificationMessage: 'Please click the link below to verify your email address. {####}'  
        MfaConfiguration: OFF
        AutoVerifiedAttributes:
          - email
        AdminCreateUserConfig:
          AllowAdminCreateUserOnly: false
        Policies:
          PasswordPolicy:
            RequireLowercase: false
            RequireSymbols: true
            RequireNumbers: true
            MinimumLength: 8
            RequireUppercase: false
            TemporaryPasswordValidityDays: 7
        UsernameAttributes:
          - email
        Schema:
          - Name: name
            AttributeDataType: String
            Mutable: true
            Required: true
          - Name: email
            AttributeDataType: String
            Mutable: false
            Required: false
        UserPoolTags:
          Group: CEP4-A72
          Name Initials: RG
          Purpose: "Case study"

    CognitoUserPoolClientUserPoolClient:
      Type: "AWS::Cognito::UserPoolClient"
      Properties:
        ClientName: rg-${self:service}-${self:provider.stage}-UserPoolClient
        UserPoolId:
          Ref: CognitoUserPoolUserPool
        ExplicitAuthFlows:
          - ADMIN_NO_SRP_AUTH
          - USER_PASSWORD_AUTH
        GenerateSecret: false
        IdTokenValidity: 12
        RefreshTokenValidity: 30
        ReadAttributes:
          - name
          - email
    UserPoolDomain: 
      Type: AWS::Cognito::UserPoolDomain 
      Properties:
        UserPoolId: !Ref CognitoUserPoolUserPool 
        Domain: rg-${self:provider.stage}-${self:service}

  Outputs:
    UserPoolId:
      Value:
        Ref: CognitoUserPoolUserPool
    UserPoolClientId:
      Value:
        Ref: CognitoUserPoolClientUserPoolClient

plugins:
  - serverless-offline
